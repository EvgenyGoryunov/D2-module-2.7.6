1. создаем 2-х пользователей
>>> from newapp.models import *
>>> u1= User.objects.create_user(username='John')
>>> u1
<User: John>
>>> u2= User.objects.create_user(username='Roman')
>>> u2
<User: Roman>


2.1 создаем 2-х авторов
>>> Author.objects.create(authorUser=u1)
<Author: Author object (1)>
>>> Author.objects.create(authorUser=u2)
<Author: Author object (2)>

2.2 присваим переменным author1 и author2 значения authorUser
>>> author1=Author.objects.get(id=1)
>>> author1
<Author: Author object (1)>
>>> author1.authorUser
<User: John>
>>> author2=Author.objects.get(id=2)
>>> author2.authorUser
<User: Roman>


3. создаем 4 категории статей (постов)
>>> Category.objects.create(name='Politica')
<Category: Category object (1)>
>>> Category.objects.create(name='Nature')
<Category: Category object (
>>> Category.objects.create(name='IT')
<Category: Category object (3)>
>>> Category.objects.create(name='People')
<Category: Category object (4)>


4. создаем 2 статьи и 1 новость
>>> Post.objects.create(author=author1, categoryType='AR', title='Tomsk - best of the best', text='Gorod Tomsk bla bla bla')
<Post: Post object (1)>
>>> x=Post(id=1)
>>> x.categoryType
'AR'
>>> Post(id=1).categoryType
'AR'
>>> Post.objects.create(author=author2, categoryType='AR', title='IT - good rabora', text='IT  blo blo blo')
<Post: Post object (2)>
>>> Post.objects.get(id=2).title
'IT - good rabora'
>>> Post.objects.create(author=author2, categoryType='NW', title='People - good people', text='People  bly bly bly')
<Post: Post object (3)>
>>> Post.objects.get(id=3).text
'People  bly bly bly'
>>> Post.objects.all().values('text')
<QuerySet [{'text': 'Gorod Tomsk bla bla bla'}, {'text': 'IT  blo blo blo'}, {'text': 'People  bly bly bly'}]>


5. присваиваем категории для наших статей
>>> Post.objects.get(id=1).postCategory.add(Category.objects.get(id=1))
>>> Post.objects.get(id=1).postCategory.add(Category.objects.get(id=2))
>>> Post.objects.get(id=2).postCategory.add(Category.objects.get(id=3))
>>> Post.objects.get(id=3).postCategory.add(Category.objects.get(id=4))


6. создаем комментарии к статьям (к первой статье 2 коммента от разных авторов)
>>> Comment.objects.create(commentPost=Post.objects.get(id=1), commentUser=Author.objects.get(id=1).authorUser, text='Tomsk - gorod geroi')
<Comment: Comment object (1)>
>>> Comment.objects.create(commentPost=Post.objects.get(id=1), commentUser=Author.objects.get(id=2).authorUser, text='No! Tomsk - bolshay derevny')
<Comment: Comment object (2)>
>>> Comment.objects.create(commentPost=Post.objects.get(id=2), commentUser=Author.objects.get(id=1).authorUser, text='Cfera IT nashe vse!!!')
<Comment: Comment object (3)>
>>> Comment.objects.create(commentPost=Post.objects.get(id=3), commentUser=Author.objects.get(id=2).authorUser, text='People - eto ne bogi')
<Comment: Comment object (4)>


7. создаем лайки и дизлайки к нашим статьям и комментам
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=1).rating
1
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=1).dislike()
>>> Comment.objects.get(id=1).dislike()
>>> Comment.objects.get(id=2).like()
>>> Comment.objects.get(id=2).like()
>>> Comment.objects.get(id=2).like()
>>> Comment.objects.get(id=2).dislike()
>>> Comment.objects.get(id=3).like()
>>> Comment.objects.get(id=2).like()
>>> Comment.objects.get(id=3).like()
>>> Comment.objects.get(id=3).like()
>>> Comment.objects.get(id=3).rating
3
>>> Post.objects.get(id=1).like()
>>> Post.objects.get(id=1).like()
>>> Post.objects.get(id=1).like()
>>> Post.objects.get(id=1).dislike()
>>> Post.objects.get(id=1).rating
2


8. обновляем рейтинги авторов
>>> Author.objects.get(id=1)
<Author: Author object (1)>
>>> Author.objects.get(id=1).update_rating()
>>> Author.objects.get(id=1).ratingAuthor
13
>>> Post.objects.get(id=1).like()
>>> Author.objects.get(id=1).update_rating()
>>> Author.objects.get(id=1).ratingAuthor
16


9. получаем username и рейтинг лучшего пользователя
>>> Author.objects.all().order_by('-ratingAuthor')[:1]
<QuerySet [<Author: Author object (1)>]>
>>> Author.objects.all().order_by('-ratingAuthor').values('authorUser','ratingAuthor')[:1]
<QuerySet [{'authorUser': 1, 'ratingAuthor': 16}]>


10. выводим дату добавления, username автора, рейтинг, заголовок лучшей статьи, основываясь на лайках
>>> Post.objects.all().order_by('-rating').values('dateCreation', 'author', 'rating', 'title', 'text')[:1]
<QuerySet [{'dateCreation': datetime.datetime(2021, 11, 6, 4, 31, 56, 632061, tzinfo=<UTC>), 'author': 1, 'rating': 3, 'title': 'Tomsk - best of the best', 'text': 'Gorod Tomsk bla bla bla'}]>
10.1 превьюшка данной статьи
Post.objects.all().order_by('-rating')[0].preview()
'Gorod Tomsk bla bla bla...'


11. выводим все комменты к лучшей статье (из п10) (дата, пользователь, рейтинг, текст)
получаем id лучшего поста (п10)
>>> Post.objects.all().order_by('-rating')[0].id
1
формируем запрос
>>> Comment.objects.filter(commentPost=Post.objects.get(id=Post.objects.all().order_by('-rating')[0].id)).values('dateCreation', 'commentUser', 'rating', 'text')
<QuerySet [{'dateCreation': datetime.datetime(2021, 11, 6, 4, 33, 32, 9822, tzinfo=<UTC>), 'commentUser': 1, 'rating': 4, 'text': 'Tomsk - gorod geroi'}, {'dateCreation': datetime.datetime(2021, 11, 6, 4, 33, 38, 755815, tzinfo=<UTC>), 'commentUser': 2, 'rating': 3, 'text': 'No! Tomsk - bolshay derevny'}]>

